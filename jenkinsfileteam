node{
  def mavenHome = tool name: 'maven3.9.6'    
  stage('1.clonecode'){
    git "https://github.com/mbinui/maven-web-application.git"
  }
  stage('2.mavenBuild'){
    sh "${mavenHome}/bin/mvn package"
   //ensure you have configured maven as a tool in Jenkins 
  }
  stage('3.codeQualityAnalysis'){
    sh "${mavenHome}/bin/mvn sonar:sonar" 
   //edit pom.xml propertiesTAG with SonarQube server details
  }
  stage('4.uploadArtifacts'){
    sh "${mavenHome}/bin/mvn deploy"
  //edit pom.xml distributionTag with nexus repositories details
  // edit conf/settings.xml in Jenkins with nexus server details
  }
  stage('5.deploy2UAT'){
    //use deploy to container plugin
    //use pipeline syntax to generate syntax
    deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://13.41.188.172:8080/')], contextPath: null, war: 'target/*war'
 }
  stage('6.ManualApproval'){
    sh " echo 'Please review & approve' "
    timeout(time:300, unit:'MINUTES')
    {
      input message: 'Application ready for deployment, Please review and approve'
    }       
  }
  stage('7.deploy2prod'){
    //use deploy to container plugin
    deploy adapters: [tomcat9(credentialsId: 'tomcat-cred', path: '', url: 'http://13.41.188.172:8080/')], contextPath: null, war: 'target/*war'
  }

  stage('8.apm'){
    sh "echo 'monitoring and observation and alerting' "
    sh "echo 'application performance Monitoring in progress' "
  }
  stage('9.notification'){
    sh "echo create email notification to resolve any issue that may arise"
    //use pipeline syntax and email notification plugin to achieve this  
emailext body: '''Hi Team

The build and Deployment status for tesla-webapp

regards
mbi''', recipientProviders: [buildUser(), developers()], subject: 'Build status', to: 'mbi@yahoo.com'
  }
}
